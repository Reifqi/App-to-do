{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","_useState","useState","_useState2","Object","slicedToArray","input","setInput","react_default","a","createElement","onSubmit","e","preventDefault","addTodo","className","value","onChange","target","placeholder","type","TodoItem","todo","removeTodo","completeTodo","completed","text","index_esm","style","marginRight","onClick","id","bs_index_esm","App","todos","setTodos","updatedTodos","toConsumableArray","filter","map","length","newTodos","concat","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"0MAEe,SAASA,EAASC,GAAO,IAAAC,EACZC,mBAAS,IADGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/BK,EAD+BH,EAAA,GACxBI,EADwBJ,EAAA,GAOtC,OACEK,EAAAC,EAAAC,cAAA,QAAMC,SANY,SAACC,GACnBA,EAAEC,iBACFb,EAAMc,QAAQR,GACdC,EAAS,KAGqBQ,UAAU,aACtCP,EAAAC,EAAAC,cAAA,SACEM,MAAOV,EACPW,SAAU,SAACL,GAAD,OAAOL,EAASK,EAAEM,OAAOF,QACnCD,UAAU,aACVI,YAAY,eAEdX,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAASL,UAAU,eAAhC,+BCbS,SAASM,EAASrB,GAAO,IAC/BsB,EAAkCtB,EAAlCsB,KAAMC,EAA4BvB,EAA5BuB,WAAYC,EAAgBxB,EAAhBwB,aACzB,OACEhB,EAAAC,EAAAC,cAAA,OAAKK,UAAWO,EAAKG,UAAY,oBAAqB,YACnDH,EAAKI,KACNlB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAkBC,MAAO,CAACC,YAAa,OAAQC,QAAS,WAAKP,EAAWD,EAAKS,OAC7EvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAaF,QAAS,kBAAMN,EAAaF,EAAKS,SCqCvCE,MA1Cf,WAAe,IAAAhC,EACaC,mBAAS,IADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNiC,EADM/B,EAAA,GACCgC,EADDhC,EAAA,GAaPoB,EAAY,SAACQ,GACjB,IAAIK,EAAahC,OAAAiC,EAAA,EAAAjC,CAAI8B,GAAOI,OAAO,SAAChB,GAAD,OAASA,EAAKS,KAAOA,IACxDI,EAASC,IAGLZ,EAAc,SAACO,GACnB,IAAIK,EAAeF,EAAMK,IAAI,SAACjB,GAK5B,OAJGA,EAAKS,KAAOA,IACbT,EAAKG,WAAaH,EAAKG,WAGlBH,IAETa,EAASC,IAEX,OACE5B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACX,EAAD,CAAUe,QA5BE,SAACY,GACf,IAAIK,EAAK,EACNG,EAAMM,OAAS,IAChBT,EAAKG,EAAM,GAAGH,GAAK,GAErB,IACIU,EAAQ,CADD,CAACV,GAAIA,EAAIL,KAAMA,EAAMD,WAAW,IAC/BiB,OAAAtC,OAAAiC,EAAA,EAAAjC,CAAa8B,IACzBC,EAASM,MAsBPjC,EAAAC,EAAAC,cAAA,MAAIK,UAAU,cACbmB,EAAMK,IAAI,SAACjB,GACV,OACEd,EAAAC,EAAAC,cAACW,EAAD,CAAUE,WAAYA,EAAYC,aAAeA,EAAcF,KAAQA,EAAMqB,IAAKrB,EAAKS,SC7BlFa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAnC,EAAA,GAAAoC,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,WAAP,KACErD,EAAAC,EAAAC,cAACoD,EAAD,QAOJlB","file":"static/js/main.e0da3671.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function TodoForm(props) {\n  const [input, setInput] = useState(\"\");\n  const handleSubmit= (e) => {\n    e.preventDefault()\n    props.addTodo(input)\n    setInput(\"\")\n  }\n  return (\n    <form onSubmit={handleSubmit} className=\"todo-form\">\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"todo-input\"\n        placeholder=\"add a Todo\"\n      />\n      <button type='submit' className=\"todo-button\">add Todo</button>\n    </form>\n  );\n}\n","import React from 'react'\nimport {RiDeleteBin6Line} from \"react-icons/ri\"\nimport {BsFileCheck} from \"react-icons/bs\"\n\nexport default function TodoItem(props) {\n  const {todo, removeTodo, completeTodo} = props\n  return (\n    <div className={todo.completed ? \"todo-row complete\": \"todo-row\"}>\n      {todo.text}\n      <div className='iconsContainer'> \n        <RiDeleteBin6Line style={{marginRight: '5px'}} onClick={()=>{removeTodo(todo.id)}}/>\n        <BsFileCheck onClick={() => completeTodo(todo.id)}/>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport { useState } from \"react\";\nimport TodoItem from \"./components/TodoItem\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (text) => {\n    let id = 1;\n    if(todos.length > 0 ){\n      id = todos[0].id + 1\n    }\n    let todo = {id: id, text: text, completed: false}\n    let newTodos = [todo, ...todos]\n    setTodos(newTodos)\n  };\n\n  const removeTodo =(id) =>{\n    let updatedTodos=[...todos].filter((todo)=> todo.id !== id)\n    setTodos(updatedTodos);\n  };\n\n  const completeTodo =(id) =>{\n    let updatedTodos = todos.map((todo)=>{\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      \n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  };\n  return (\n    <div className=\"todo-app\">\n      <h1>To-do List</h1>\n      <TodoForm addTodo={addTodo} />\n      <hr className=\"seperator\"/>\n      {todos.map((todo)=>{\n        return(\n          <TodoItem removeTodo={removeTodo} completeTodo ={completeTodo} todo = {todo} key={todo.id}/>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}